{"ast":null,"code":"var _class;\nimport { Order } from '../order';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../order.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/material/snack-bar\";\nimport * as i4 from \"@angular/forms\";\nexport class CreateOrderComponent {\n  constructor(orderService, router, snackBar) {\n    this.orderService = orderService;\n    this.router = router;\n    this.snackBar = snackBar;\n    this.order = new Order();\n    this.submitted = false;\n  }\n  ngOnInit() {}\n  newOrder() {\n    this.submitted = false;\n    this.order = new Order();\n  }\n  save() {\n    this.orderService.createOrder(this.order).subscribe(data => {\n      console.log(data);\n      this.snackBar.open('Order created successfully!', 'Close', {\n        duration: 10000\n      });\n      this.router.navigate(['/orders']);\n    }, error => console.log(error));\n    this.order = new Order();\n  }\n  onSubmit() {\n    this.submitted = true;\n    this.save();\n  }\n}\n_class = CreateOrderComponent;\n_class.ɵfac = function CreateOrderComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.OrderService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.MatSnackBar));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-create-order\"]],\n  decls: 13,\n  vars: 3,\n  consts: [[2, \"width\", \"400px\", 3, \"hidden\"], [3, \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"description\"], [\"type\", \"text\", \"id\", \"description\", \"required\", \"\", \"name\", \"description\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\"], [3, \"hidden\"]],\n  template: function CreateOrderComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h3\");\n      i0.ɵɵtext(1, \"Create Order\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 0)(3, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function CreateOrderComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n      i0.ɵɵtext(6, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function CreateOrderComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.order.description = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"button\", 5);\n      i0.ɵɵtext(9, \"Submit\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(10, \"div\", 6)(11, \"h4\");\n      i0.ɵɵtext(12, \"You submitted successfully!\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"hidden\", ctx.submitted);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.order.description);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"hidden\", !ctx.submitted);\n    }\n  },\n  dependencies: [i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["Order","CreateOrderComponent","constructor","orderService","router","snackBar","order","submitted","ngOnInit","newOrder","save","createOrder","subscribe","data","console","log","open","duration","navigate","error","onSubmit","i0","ɵɵdirectiveInject","i1","OrderService","i2","Router","i3","MatSnackBar","selectors","decls","vars","consts","template","CreateOrderComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","CreateOrderComponent_Template_form_ngSubmit_3_listener","CreateOrderComponent_Template_input_ngModelChange_7_listener","$event","description","ɵɵadvance","ɵɵproperty"],"sources":["Z:\\LAVORO\\Library2\\src\\app\\create-order\\create-order.component.ts","Z:\\LAVORO\\Library2\\src\\app\\create-order\\create-order.component.html"],"sourcesContent":["import { OrderService } from '../order.service';\nimport { Order } from '../order';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-create-order',\n  templateUrl: './create-order.component.html',\n  styleUrls: ['./create-order.component.css']\n})\nexport class CreateOrderComponent implements OnInit {\n\n  order: Order = new Order();\n  submitted = false;\n\n  constructor(private orderService: OrderService,\n              private router: Router,\n              private snackBar: MatSnackBar) { }\n\n  ngOnInit() {\n  }\n\n  newOrder(): void {\n    this.submitted = false;\n    this.order = new Order();\n  }\n\n  save() {\n    this.orderService.createOrder(this.order)\n      .subscribe(data => {\n        console.log(data);\n        this.snackBar.open('Order created successfully!', 'Close', {\n          duration: 10000,\n        });\n        this.router.navigate(['/orders']);\n      }, error => console.log(error));\n    this.order = new Order();\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    this.save();\n  }\n}\n","<h3>Create Order</h3>\r\n<div [hidden]=\"submitted\" style=\"width: 400px;\">\r\n  <form (ngSubmit)=\"onSubmit()\">\r\n    <div class=\"form-group\">\r\n      <label for=\"description\">Description</label>\r\n      <input type=\"text\" class=\"form-control\" id=\"description\" required [(ngModel)]=\"order.description\" name=\"description\">\r\n    </div>\r\n\r\n\r\n\r\n    <button type=\"submit\" class=\"btn btn-success\">Submit</button>\r\n  </form>\r\n</div>\r\n\r\n<div [hidden]=\"!submitted\">\r\n  <h4>You submitted successfully!</h4>\r\n</div>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}